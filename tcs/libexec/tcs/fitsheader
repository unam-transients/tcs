#!/bin/sh

########################################################################

# This file is part of the UNAM telescope control system.

########################################################################

# Copyright Â© 2010, 2011, 2012, 2017, 2019 Alan M. Watson <alan@astro.unam.mx>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
# WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
# AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
# DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
# PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
# TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.

########################################################################

#\
umask 0; exec /usr/bin/tclsh8.6 -encoding "utf-8" "$0" ${1+"$@"}

package require cmdline

set options {
}
set usage {fitsheader [--] [file ...]}

try {
  array set params [::cmdline::getoptions argv $options $usage]
} trap {CMDLINE USAGE} {message o} {
  puts stderr "error: usage: $usage"
  exit 1
}
if {[llength $argv] > 0 && [string equal [lindex $argv 0] "--"]} {
  set argv [lrange $argv 1 end]
}
if {[llength $argv] == 0} {
  set argv "/dev/stdin"
}

foreach file $argv {
  if {[catch {
    switch -glob $file {
      "*.gz" {
        set channel [open "|gunzip -c -- \"$file\"" "r"]
      }
      "*.bz2" {
        set channel [open "|bunzip2 -c -- \"$file\"" "r"]
      }
      default {
        set channel [open "$file" "r"]
      }
    }
    chan configure $channel -encoding binary
  }]} {
    puts stderr "tcs fitsheader: error: unable to open \"$file\"."
    exit 1
  }
  if {[catch {
    while {true} {
      set record [read $channel 80]
      if {[string length $record] != 80} {
        error "unexpected EOF"
      }
      set record [string trimright $record]
      if {[string equal $record "END"]} {
        break
      }
      catch {puts $record}
    }  
  } message]} {
    puts stderr "tcs fitsheader: error: while reading \"$file\": $message."
    exit 1
  }
  catch {close $channel}
}

exit 0

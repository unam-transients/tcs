#!/bin/sh

########################################################################

# This file is part of the UNAM telescope control system.

########################################################################

# Copyright Â© 2018, 2019 Alan M. Watson <alan@astro.unam.mx>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
# WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
# AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
# DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
# PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
# TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.

########################################################################

program="tcs $(basename "$0")"

usageerror () {
  echo 1>&2 "usage: $program [--] camera [host]"
  exit 1
}

optstring=
if ! getopt -qQ -- "$optstring" "$@"
then
  usageerror
fi
eval set -- "$(getopt -q -- "$optstring" "$@")"
while test "$1" != "--"
do
  case "$1" in
  *)
    usageerror
    ;;
  esac
done
shift
case $# in
1)
  camera="$1"
  host=""
  ;;
2)
  camera="$1"
  host="$2"
  ;;
*)
  usageerror
  ;;
esac

########################################################################

if test -z "$host"
then
  vartcsdir="$tcsprefix/var/tcs/$camera"
  varwwwdir="$tcsprefix/var/www/tcs/instrument/$camera"
  mkdir -p "$varwwwdir"
  cd "$varwwwdir"
  rm -f *.jpg
  for suffix in "" "-fwhmwitness"
  do
    ln -sf "$vartcsdir"/latest$suffix.jpg .
    ln -sf "$vartcsdir"/latest$suffix-small.jpg .
  done
  exit 0
fi

########################################################################

if convert -list font | grep 'Font: Verdana$' >/dev/null
then
  fontargs="-pointsize 10 -font Verdana"
elif convert -list font | grep -s 'Font: fixed$' >/dev/null
then
  fontargs="-pointsize 10 -font fixed"
else
  fontargs="-pointsize 10"
fi

dir="$tcsprefix/var/tcs/$camera"
mkdir -p "$dir"
cd "$dir"

while true
do

  for suffix in "" "-fwhmwitness"
  do

    if test -f latest$suffix.fits && (test ! -f previous$suffix.fits || ! cmp -s latest$suffix.fits previous$suffix.fits)
    then
  
      IFS=" " set -- $(tcs fitsdatawindow latest$suffix.fits)
      sx=$1
      sy=$2
      nx=$3
      ny=$4
      datacrop="${nx}x${ny}+${sx}+${sy}"

      cx=$(expr $nx / 2)
      cy=$(expr $ny / 2)
      cr=$(expr $ny / 40)
      cw=$(expr $ny / 400 + 1)

      dateandtime=$(tcs fitsheadervalue SDATE latest$suffix.fits | sed 's/T/ /')
      date=$(date -u --date "$dateandtime" +"%Y-%m-%d")
      time=$(date -u --date "$dateandtime" +"%H:%M:%S")
      compactdate=$(date -u --date "$dateandtime" +"%Y%m%d")
      compacttime=$(date -u --date "$dateandtime" +"%H%M%S")
      compactdateandtime=$(date -u --date "$dateandtime" +"%Y%m%dT%H%M%S")
    
      nice -n +20 convert \
        -normalize -negate \
        -crop $datacrop +repage \
        latest$suffix.fits latest$suffix.png

      nice -n +20 convert \
        -fill none -stroke red -strokewidth $cw -draw "circle $cx,$cy $cx,$(expr $cy + $cr)" \
        -scale x512 \
        -gravity southeast -fill white -undercolor black $fontargs -stroke none -annotate +1+0 "$camera $date $time" \
        -quality 85 \
        latest$suffix.png latest$suffix-new.jpg
          
      nice -n +20 convert \
        -scale x90 \
        -gravity southeast -fill white -undercolor black $fontargs -annotate +1+0 "$camera $time" \
        -quality 75 \
        latest$suffix.png latest$suffix-small-new.jpg

      mv latest$suffix-new.jpg latest$suffix.jpg
      mv latest$suffix-small-new.jpg latest$suffix-small.jpg

      ln -f latest$suffix.fits previous$suffix.fits
              
      rsync --timeout=10 *.jpg rsync://$host/tcs/$camera/ 2>/dev/null

    fi

  done
    
  sleep 1
  
done

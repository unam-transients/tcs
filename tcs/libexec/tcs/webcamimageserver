#!/bin/sh

########################################################################

# This file is part of the UNAM telescope control system.

########################################################################

# Copyright Â© 2012, 2013, 2014, 2016, 2017, 2019 Alan M. Watson <alan@astro.unam.mx>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
# WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
# AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
# DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
# PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
# TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.

########################################################################

program="tcs $(basename "$0")"

usageerror () {
  echo 1>&2 "usage: $program [-r angle] [-c crop] [--] id url"
  exit 1
}

optstring=r:c:d:
crop=""
angle=""
distort="0 0 0"
if ! getopt -qQ -- "$optstring" "$@"
then
  usageerror
fi
eval set -- "$(getopt -q -- "$optstring" "$@")"
while test "$1" != "--"
do
  case "$1" in
  -r)
    angle="$2"
    shift 2
    ;;
  -c)
    crop="$2"
    shift 2
    ;;
  -d)
    distort="$2"
    shift 2
    ;;
  *)
    usageerror
    ;;
  esac
done
shift
if test $# != 2
then
  usageerror
fi

id="$1"
url="$2"
ID=$(echo "$id" | tr '[a-z]' '[A-Z]')

if convert -list font | grep 'Font: Verdana$' >/dev/null
then
  fontargs="-pointsize 10 -font Verdana"
elif convert -list font | grep -s 'Font: fixed$' >/dev/null
then
  fontargs="-pointsize 10 -font fixed"
else
  fontargs="-pointsize 10"
fi

if test -z "$angle"
then
  rotateargs=""
else
  rotateargs="-rotate $angle"
fi

if test -z "$crop"
then
  cropargs=""
else
  cropargs="-crop $crop"
fi

while true
do
  
  dateandtime=$(date -u +"%Y-%m-%d %H:%M:%S")
  date=$(date -u --date "$dateandtime" +"%Y-%m-%d")
  time=$(date -u --date "$dateandtime" +"%H:%M:%S")
  compactdate=$(date -u --date "$dateandtime" +"%Y%m%d")
  compacttime=$(date -u --date "$dateandtime" +"%H%M%S")
  compactdateandtime=$(date -u --date "$dateandtime" +"%Y%m%dT%H%M%S")
  
  dir="$tcsprefix"/var/tcs/$compactdate/webcam/$id/
  mkdir -p "$dir"
  cd "$dir"
  
  touch label
  touch label-small

  if curl --silent --max-time 3 $url >newraw.jpg && test -s newraw.jpg
  then
    mv newraw.jpg raw.jpg
    undercolor=black
    echo "$ID $date $time UTC" >label
    echo "$ID $time" >label-small
  else
    undercolor=red
  fi
    
  nice -n +20 convert \
    $rotateargs \
    -gravity northwest $cropargs -distort barrel "$distort" +repage \
    -scale x512 +repage \
    -gravity southeast -fill white -undercolor $undercolor $fontargs -annotate +1+0 "$(cat label)" \
    -quality 75 \
    raw.jpg $compactdateandtime.jpg

  nice -n +20 convert \
    $rotateargs \
    -gravity northwest $cropargs -distort barrel "$distort" +repage \
    -scale x90 +repage \
    -gravity southeast -fill white -undercolor $undercolor $fontargs -annotate +1+0 "$(cat label-small)" \
    -quality 75 \
    raw.jpg $compactdateandtime-small.jpg
    
  ln -sf raw.jpg                       latest-raw.jpg
  ln -sf $compactdateandtime.jpg       latest.jpg
  ln -sf $compactdateandtime-small.jpg latest-small.jpg

  sleep 10
  
done

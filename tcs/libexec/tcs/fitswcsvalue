#!/bin/sh

########################################################################

# This file is part of the UNAM telescope control system.

########################################################################

# Copyright Â© 2010, 2011, 2017, 2018, 2019 Alan M. Watson <alan@astro.unam.mx>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
# WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
# AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
# DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
# PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
# TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.

########################################################################

# The SIP convention is documented at http://fits.gsfc.nasa.gov/registry/sip.html.

program="tcs $(basename "$0")"

usageerror () {
  echo 1>&2 "usage: $program [--] cpix1 cpix2 [fitsfile ...]"
  exit 1
}

optstring=""
if ! getopt -qQ -- "$optstring" "$@"
then
  usageerror
fi
eval set -- "$(getopt -- "$optstring" "$@")"
while test "$1" != "--"
do
  case "$1" in
  *)
    usageerror
    ;;
  esac
done
shift
case $# in
0|1)
  usageerror
  ;;
2)
  cpix1="$1"
  cpix2="$2"
  set -- "/dev/stdin"
  ;;
*)
  cpix1="$1"
  cpix2="$2"
  shift 2
esac

for file in "$@"
do
  tcs fitsheader -- "$file" | 
  awk -v cpix1="$cpix1" -v cpix2="$cpix2" '

    BEGIN {

      pi = 4.0 * atan2(1.0, 1.0);

      A_ORDER = 0;
      A_2_0 = A_1_1 = A_0_2 = 0.0;
      A_3_0 = A_2_1 = A_1_2 = A_0_3 = 0.0;

      B_ORDER = 0;
      B_2_0 = B_1_1 = B_0_2 = 0.0;
      B_3_0 = B_2_1 = B_1_2 = B_0_3 = 0.0;      

    }

    function cosd(x) {
      return cos(x * (pi / 180.0));
    }

    $1 == "CRVAL1"    { CRVAL1   = $3; }
    $1 == "CRVAL2"    { CRVAL2   = $3; }
    $1 == "CRPIX1"    { CRPIX1   = $3; }
    $1 == "CRPIX2"    { CRPIX2   = $3; }
    $1 == "CD1_1"     { CD1_1    = $3; }
    $1 == "CD1_2"     { CD1_2    = $3; }
    $1 == "CD2_1"     { CD2_1    = $3; }
    $1 == "CD2_2"     { CD2_2    = $3; }
    $1 == "EQUINOX"   { EQUINOX  = $3; }

    $1 == "A_ORDER"   { A_ORDER  = $3; }
    $1 == "A_2_0"     { A_2_0    = $3; }
    $1 == "A_1_1"     { A_1_1    = $3; }
    $1 == "A_0_2"     { A_0_2    = $3; }
    $1 == "A_3_0"     { A_3_0    = $3; }
    $1 == "A_2_1"     { A_2_1    = $3; }
    $1 == "A_1_2"     { A_1_2    = $3; }
    $1 == "A_0_3"     { A_0_3    = $3; }

    $1 == "B_ORDER"   { B_ORDER  = $3; }
    $1 == "B_2_0"     { B_2_0    = $3; }
    $1 == "B_1_1"     { B_1_1    = $3; }
    $1 == "B_0_2"     { B_0_2    = $3; }
    $1 == "B_3_0"     { B_3_0    = $3; }
    $1 == "B_2_1"     { B_2_1    = $3; }
    $1 == "B_1_2"     { B_1_2    = $3; }
    $1 == "B_0_3"     { B_0_3    = $3; }

    END {

      if (A_ORDER > 3 || B_ORDER > 3) {
        printf "error: SIP polynomicals beyond third order are not supported.\n" >"/dev/stderr";
        exit(1);
      }

      u = cpix1 - CRPIX1;
      v = cpix2 - CRPIX2;

      f = 0;
      f += A_2_0 * u * u;
      f += A_1_1 * u * v;
      f += A_0_2 * v * v;
      f += A_3_0 * u * u * u;
      f += A_2_1 * u * u * v;
      f += A_1_2 * u * v * v;
      f += A_0_3 * v * v * v;
      
      g = 0;
      g += B_2_0 * u * u;
      g += B_1_1 * u * v;
      g += B_0_2 * v * v;
      g += B_3_0 * u * u * u;
      g += B_2_1 * u * u * v;
      g += B_1_2 * u * v * v;
      g += B_0_3 * v * v * v;

      x = CD1_1 * (u + f) + CD1_2 * (v + g);
      y = CD2_1 * (u + f) + CD2_2 * (v + g);

      alpha = CRVAL1 + x / cosd(CRVAL2);
      delta = CRVAL2 + y;
      if (alpha >= 360.0)
        alpha -= 360.0
      if (alpha < 0.0)
        alpha += 360.0;
    
      printf("%9.5f %+9.5f %s\n", alpha, delta, EQUINOX);

      exit(0);

    }
    
  ' || exit 1
done

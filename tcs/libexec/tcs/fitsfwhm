#!/bin/sh

########################################################################

# This file is part of the UNAM telescope control system.

########################################################################

# Copyright Â© 2013, 2015, 2017, 2019 Alan M. Watson <alan@astro.unam.mx>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
# WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
# AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
# DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
# PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
# TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.

########################################################################

program="tcs $(basename "$0")"

usageerror () {
  echo 1>&2 "usage: $program [-s section] [-S saturationlevel] [-m] [-A] [-w wisdom] [--] fitsfile"
  exit 1
}

optstring=s:S:m:Aw:
saturationlevel="DATASAT"
section="DATASEC"
median=0
autocorrelation=false
wisdom=/usr/local/var/tcs/wisdom
if ! getopt -qQ -- "$optstring" "$@"
then
  usageerror
fi
eval set -- "$(getopt -q -- "$optstring" "$@")"
while test "$1" != "--"
do
  case "$1" in
  -s)
    section="$2"
    shift 2
    ;;
  -S)
    saturationlevel="$2"
    shift 2
    ;;
  -m)
    median="$2"
    shift 2
    ;;
  -A)
    autocorrelation=true
    shift
    ;;
  -w)
    wisdom="$2"
    shift 2
    ;;
  *)
    usageerror
    ;;
  esac
done
shift
if test $# != 1
then
  usageerror
fi

fitsfile="$1"

etcdir="$tcsprefix"/etc/tcs

if test "$section" = "DATASEC"
then
  section="$(tcs fitsheadervalue DATASEC "$fitsfile")"
fi
if test -z "$section" || test "$section" = "none"
then
  naxis1=$(tcs fitsheadervalue NAXIS1 "$fitsfile")
  naxis2=$(tcs fitsheadervalue NAXIS2 "$fitsfile")
  section="[1:$naxis1,1:$naxis2]"
fi
set -- $(echo "$section" | sed 's/[^0-9]/ /g')
xmin=$1
xmax=$2
ymin=$3
ymax=$4

if test "$saturationlevel" = "DATASAT"
then
  saturationlevel="$(expr $(tcs fitsheadervalue DATASAT "$fitsfile") / 2)"
fi

if $autocorrelation
then
  wsx=$(expr $xmin - 1)
  wsy=$(expr $ymin - 1)
  wnx=$(expr $xmax - $xmin + 1)
  wny=$(expr $ymax - $ymin + 1)
  if test -z "$saturationlevel" || test "$saturationlevel" = "none"
  then
    saturationlevel=0
  fi
  tcs fitpsf "$fitsfile" $wsx $wnx $wsy $wny 16 3 $saturationlevel 2 "$wisdom" 2>/dev/null
else
  if test ! -z "$saturationlevel" && test "$saturationlevel" != "none"
  then
    saturationlevelflags="-SATUR_LEVEL $saturationlevel"
  fi
  if which source-extractor >/dev/null
  then
    SOURCEEXTRACTOR=source-extractor
  else
    SOURCEEXTRACTOR=sextractor
  fi
  "$SOURCEEXTRACTOR" "$fitsfile" \
    -c "$etcdir"/fitsfwhm.sex \
    -PARAMETERS_NAME "$etcdir"/fitsfwhm.param \
    $saturationlevelflags \
    -CATALOG_NAME STDOUT 2>&- |
  awk -v xmin=$xmin -v xmax=$xmax -v ymin=$ymin -v ymax=$ymax '
  {
    x = $1;
    y = $2;
    flags = $5;
    if (flags <= 1 && xmin <= x && x <= xmax && ymin <= y && y <= ymax) {
      print $0;
    }
  }
  ' |
  sort -k 4n |
  if test $median != 0
  then
    head -$median | sort -k 3n
  else
    head -1
  fi |
  awk '
    BEGIN {
      i = 0;
    }
    {
      x[i]    = $1;
      y[i]    = $2;
      fwhm[i] = $3;
      mag[i]  = $4;
      ++i;
    }
    END {
      if (NR == 0) {
        print "fitsfwhm: no sources" >/dev/stderr;
        exit(1);
      }
      iselected = int(NR / 2);
      printf "%6.2f %6.2f %6.2f\n", fwhm[iselected], x[iselected], y[iselected];
      exit(0);
    }
  '
fi

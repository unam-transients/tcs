#!/bin/sh

########################################################################

# This file is part of the UNAM telescope control system.

########################################################################

# Copyright Â© 2009, 2010, 2011, 2012, 2017, 2019 Alan M. Watson <alan@astro.unam.mx>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
# WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
# AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
# DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
# PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
# TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.

########################################################################

#\
umask 0; exec /usr/bin/tclsh8.6 -encoding "utf-8" "$0" ${1+"$@"}

source [file join $::env(tcsprefix) "lib" "tcs" "packages.tcl"]

# Load the TCS client package.
package require "client"

# Parse the arguments. The first argument is the server name and subsequent
# arguments are the command.
if {[llength $argv] < 2} {
  puts stderr "usage: tcs request server request ..."
  exit 1
}
set server  [lindex $argv 0]
set command [lrange $argv 1 end]

# Define a background error handler.
proc bgerror {message} {
  puts stderr "tcs request: bgerror: $message"
  exit 1
}

# Make the request. In the case of success, the response value is
# returned as a Tcl dict. Otherwise an error is thrown.
if {[catch {
  client::request $server $command
} result]} {
  puts stderr "tcs request: error: $result"
  exit 1
}

# Print the response.
if {[string equal $command "status"]} {
  foreach {key value} $result {
    puts [format "%-48.48s %s" $key $value]
  }
} elseif {![string equal $result ""]} {
  puts $result
}

exit 0

#!/bin/sh

########################################################################

# This file is part of the UNAM telescope control system.

########################################################################

# Copyright Â© 2011, 2017, 2019 Alan M. Watson <alan@astro.unam.mx>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
# WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
# AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
# DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
# PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
# TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.

########################################################################

#\
umask 0; exec /usr/bin/tclsh8.6 -encoding "utf-8" "$0" ${1+"$@"}


source [file join $::env(tcsprefix) "lib" "tcs" "packages.tcl"]

package require "config"

config::setdefaultvalue "ibb" "outletgroupaddressesdict"      ""
config::setdefaultvalue "ibb" "hostsdict"                     ""
config::setdefaultvalue "ibb" "extraoutletgroupaddressesdict" ""

set hostsdict [config::getvalue "ibb" "hostsdict"]
set outletgroupaddressesdicts [list \
  [config::getvalue "ibb" "outletgroupaddressesdict"] \
  [config::getvalue "ibb" "extraoutletgroupaddressesdict"] \
]

set thishost $argv

set noutlets [dict get $hostsdict $thishost]
if {$noutlets == 8} {
  set devices {a}
} elseif {$noutlets == 16} {
  set devices {a b}
} else {
  error "unexpected number of outlets $noutlets."
}

set outlets [dict create]

foreach outletgroupaddressesdict $outletgroupaddressesdicts {
  foreach group [dict keys $outletgroupaddressesdict] {
    set addresses [dict get $outletgroupaddressesdict $group]
    foreach address $addresses {
      set host   [lindex $address 0]
      set device [lindex $address 1]
      set number [lindex $address 2]
      if {[string equal $host $thishost]} {
        set key [list $device $number]
        if {[dict exists $outlets $key]} {
          error "outlet $address is assigned more than once."
        }
        dict set outlets $key $group
      }
    }
  }
}

set i 1
foreach device $devices {
  puts "set device #$i name $thishost-$device"
  incr i    
}
  
foreach device $devices {
  foreach number {1 2 3 4 5 6 7 8} {
    set key [list $device $number]
    if {[dict exists $outlets $key]} {
      set name [dict get $outlets $key]
      puts "set device $thishost-$device outlet $number name $name"
    } else {
      puts "set device $thishost-$device outlet $number name unused"      
    }
  }
}

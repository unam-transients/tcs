#!/bin/sh

########################################################################

# This file is part of the UNAM telescope control system.

########################################################################

# Copyright Â© 2013, 2017, 2019 Alan M. Watson <alan@astro.unam.mx>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
# WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
# AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
# DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
# PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
# TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.

########################################################################

trap '' HUP

program="tcs $(basename "$0")"

usageerror () {
  echo 1>&2 "usage: $program [--]"
  exit 1
}

optstring=
if ! getopt -qQ -- "$optstring" "$@"
then
  usageerror
fi
eval set -- "$(getopt -q -- "$optstring" "$@")"
while test "$1" != "--"
do
  case "$1" in
  *)
    usageerror
    ;;
  esac
done
shift
if test $# != 0
then
  usageerror
fi

if convert -list font | grep 'Font: Verdana$' >/dev/null
then
  fontargs="-pointsize 10 -font Verdana"
elif convert -list font | grep -s 'Font: fixed$' >/dev/null
then
  fontargs="-pointsize 10 -font fixed"
else
  fontargs="-pointsize 10"
fi


while true
do
  
  for finder in $(cd "$tcsprefix"/var/tcs/; echo *finder)
  do
  
    mkdir -p "$tcsprefix"/var/www/tcs/finder/$finder
    cd "$tcsprefix"/var/www/tcs/finder/$finder

    ln -f "$tcsprefix"/var/tcs/$finder/latest.fits .
  
    if test -f latest.fits && (test ! -f previous.fits || ! cmp -s latest.fits previous.fits)
    then

      FINDER=$(echo $finder | sed 's/finder//' | tr '[a-z]' '[A-Z]')
      
      dateandtime=$(tcs fitsheadervalue SDATE latest.fits | sed 's/T/ /')
      date=$(date -u --date "$dateandtime" +"%Y-%m-%d")
      time=$(date -u --date "$dateandtime" +"%H:%M:%S")
      compactdate=$(date -u --date "$dateandtime" +"%Y%m%d")
      compacttime=$(date -u --date "$dateandtime" +"%H%M%S")
      compactdateandtime=$(date -u --date "$dateandtime" +"%Y%m%dT%H%M%S")
  
      # Create tif.
      convert latest.fits latest.tif
        
      # Bin 2x2.
      convert -scale 546x368 latest.tif latest.tif

      # Edge detection mask.
      #convert -edge 5 $finder.tif $finder.tif

      # Create full-size JPEG.      
      convert \
        -quality 75 \
        -normalize -negate \
        -gravity southeast -fill white -undercolor black $fontargs -annotate +1+0 "$FINDER $date $time UTC" \
        latest.tif latest-new.jpg

      # Create small JPEG.
      convert \
        -scale 134x90! \
        latest.tif latest.tif
      convert \
        -quality 75 \
        -normalize -negate \
        -gravity southeast -fill white -undercolor black $fontargs -annotate +1+0 "$FINDER $time" \
        latest.tif latest-small-new.jpg

      rm latest.tif

      mv latest-new.jpg latest.jpg
      mv latest-small-new.jpg latest-small.jpg
      
      ln -f latest.fits previous.fits

    fi
    
  done

  sleep 5
  
done
